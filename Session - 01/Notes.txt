Here is the content formatted to be more Markdown friendly and visually appealing:

```markdown
# Spring Core

## Rules and guidelines to work with Spring Container

Spring Container -> Predefined spring program the work of this to handle objects.

### Spring Container

1. Find/Scan classes (Spring Bean)
2. Create object (DbConnection)
3. A ---- B ---- C ---- D (Link Object) [Inject/ HAS-A] Here ABCD are classes linking to each other 
4. Destroy the objects (even Container)

#### Container 

Memory that holds objects.

---

### Spring Container takes 2 inputs

1. **Spring Bean**: It is a class that follows rules given by Spring Container.
2. **Spring Configuration File**: It gives metadata (obj name, link details, some data). This can be provided in 3 ways:
   - XML config
   - Java config
   - Annotation config

---

### Types of Containers given by Spring framework

1. **BeanFactory (Interface)**: 
   - Supports only XML Config
   - Implementation class: `XmlBeanFactory`
   - Also called a legacy container.

2. **ApplicationContext (Interface)**: 
   - Supports all configurations (XML/Java/Annotation)
   - Multiple implementation classes:
     - `ClassPathXmlApplicationContext`
     - `FileSystemXmlApplicationContext`
     - `AnnotationConfigApplicationContext`
     - ...etc

---

## Dependency Injection and Inversion of Control (DI vs IOC)
```

This formatting uses Markdown to create headers, lists, and horizontal rules for better readability without modifying the actual content. Let me know if you need any further changes.
